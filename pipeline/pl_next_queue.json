{
	"name": "pl_next_queue",
	"properties": {
		"activities": [
			{
				"name": "get next file for queue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[NextFile2]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "sql_person",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set original file name",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get next file for queue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_original_file",
					"value": {
						"value": "@activity('get next file for queue').output.firstRow.fileToMove",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set new filename",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get next file for queue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_new_file",
					"value": {
						"value": "@activity('get next file for queue').output.firstRow.newfileToMove",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If file is ready",
				"description": "Does acceptable file exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set new filename",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set original file name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(variables('v_new_file'),'Empty'),true,false)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "create file in blob storage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_orig_file",
									"type": "DatasetReference",
									"parameters": {
										"blobcontainer": "input",
										"filepath": "export",
										"origfilename": {
											"value": "@variables('v_original_file')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_new_file",
									"type": "DatasetReference",
									"parameters": {
										"blobcontainer": "input",
										"filepath": "export",
										"newfilename": {
											"value": "@variables('v_new_file')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"v_original_file": {
				"type": "String",
				"defaultValue": "empty"
			},
			"v_new_file": {
				"type": "String",
				"defaultValue": "empty"
			}
		},
		"annotations": []
	}
}